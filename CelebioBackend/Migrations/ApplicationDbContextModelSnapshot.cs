// <auto-generated />
using System;
using Celebio;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CelebioBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Celebio.Traveller", b =>
                {
                    b.Property<int>("travellerID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("appliedTripID");

                    b.Property<string>("appliedUser");

                    b.Property<bool>("isAccepted");

                    b.HasKey("travellerID");

                    b.HasIndex("appliedTripID");

                    b.HasIndex("appliedUser");

                    b.ToTable("traveller");

                    b.HasData(
                        new
                        {
                            travellerID = 1,
                            appliedTripID = 1,
                            appliedUser = "mrtmr",
                            isAccepted = false
                        });
                });

            modelBuilder.Entity("Celebio.Trip", b =>
                {
                    b.Property<int>("tripID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("creatorID")
                        .IsRequired();

                    b.Property<string>("from")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("isOpen");

                    b.Property<DateTime>("time");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("vehicle")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("tripID");

                    b.HasIndex("creatorID");

                    b.ToTable("trip");

                    b.HasData(
                        new
                        {
                            tripID = 1,
                            creatorID = "mrtmr",
                            from = "istanbul",
                            isOpen = false,
                            time = new DateTime(2019, 1, 13, 0, 47, 31, 935, DateTimeKind.Local).AddTicks(9873),
                            to = "izmir",
                            vehicle = "otostop"
                        });
                });

            modelBuilder.Entity("Celebio.User", b =>
                {
                    b.Property<string>("username")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<int>("age");

                    b.Property<string>("bio")
                        .HasMaxLength(255);

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("gender")
                        .HasMaxLength(10);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("nationality")
                        .HasMaxLength(255);

                    b.Property<int>("password");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("username");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            username = "mrtmr",
                            age = 0,
                            email = "murat@gmail.com",
                            name = "murat emir",
                            password = 123456,
                            surname = "cabarolu"
                        },
                        new
                        {
                            username = "edac",
                            age = 0,
                            email = "murat@gmail.com",
                            name = "eda",
                            password = 123456,
                            surname = "cicekli"
                        });
                });

            modelBuilder.Entity("Celebio.Traveller", b =>
                {
                    b.HasOne("Celebio.Trip", "appliedTrip")
                        .WithMany()
                        .HasForeignKey("appliedTripID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Celebio.User", "traveller")
                        .WithMany()
                        .HasForeignKey("appliedUser");
                });

            modelBuilder.Entity("Celebio.Trip", b =>
                {
                    b.HasOne("Celebio.User", "tripCreator")
                        .WithMany()
                        .HasForeignKey("creatorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
